package com.gson.algo.huawei;

/**
 * https://www.nowcoder.com/practice/9999764a61484d819056f807d2a91f1e
 *
 * 输入一个表达式（用字符串表示），求这个表达式的值。
 * 保证字符串中的有效字符包括[‘0’-‘9’],‘+’,‘-’, ‘*’,‘/’ ,‘(’， ‘)’,‘[’, ‘]’,‘{’ ,‘}’。且表达式一定合法。
 *
 * 输入：
 * 3+2*{1+2*[-4/(8-6)+7]}
 *
 * 输出：
 * 25
 */
public class HJ50四则运算 {

    /**
     * 将字符分为3类，数字，括号，运算符
     * 1. 如何识别是- 是减号还是负号
     *    数字与运算符应该是交替出现的(注意是交易，而不是连续)，如果出现了-，
     *    且前方最近的(数字 或者 运算符) 是运算符，则-应该被识别为减号
     *
     * 2. 所有的括号都被置为( 或者 ), 因为不同形式的括号优先级都是一致的，简化分析
     *
     * 3. 建立两个栈，一个栈A存储数字，一个栈B存储符号。
     *
     * 4. 定义一个函数f, 将数字栈A顶部的两个数字取出，符号栈B顶部的运算符取出，进行运算，运算结果push进A栈
     *
     * 4. 入栈出栈的细节分析
     *    a. 每遍历到一个字符
     *       a.1 如果是数字，则push入数字栈
     *       a.2 如果是运算符
     *              a.2.1 B栈顶元素也是运算符，且比栈顶运算符优先级低或相等，则执行函数f
     *              a.2.2 B栈顶元素也是运算符，且比栈顶运算符优先级高，则将运算符入符号栈B
     *              a.2.3 B栈顶元素是括号，则将运算符入符号栈B
     *       a.3 如果是左括号，则直接入栈
     *       a.4 如果是右括号，则一直执行函数f，直至遇到符号栈B顶部元素是左括号停止，且将左括号弹栈
     *       a.5 如果-表示负号，则push 0 到数字栈A中，再将-负号push 到符号栈B中
     *
     *
     * @param args
     */
    public static void main(String[] args) {

    }
}
